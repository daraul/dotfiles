# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# theme colors
set $dark           	#2f343f
set $dark-overlay   	#696969
set $light          	#f3f4f5
set $light-overlay  	#bfbfbf
set $highlight      	#E53935
set $font-size		10

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Roboto Regular $font-size

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+slash exec echo "" | rofi -dmenu -p "Search:"  -eh 1 -bw 0 -bc "$dark-overlay" -bg "$dark" -fg "$light" -hlfg "$light" -hlbg "$dark-overlay" -font "Roboto Regular $font-size" -sidebar-mode -fullscreen -padding 400 -opacity "55" | xargs -I{} chromium-browser https://duckduckgo.com/?q={} # Search DDG

bindsym $mod+ctrl+slash exec echo "" | rofi -dmenu -p "Page:"  -eh 1 -bw 0 -bc "$dark-overlay" -bg "$dark" -fg "$light" -hlfg "$light" -hlbg "$dark-overlay" -font "Roboto Regular $font-size" -sidebar-mode -fullscreen -padding 400 -opacity "55" | xargs -I{} chromium-browser --new-window {} # Open new chromium window

# rofi to search CLI programs
bindsym $mod+ctrl+d exec rofi -show run -eh 1 -bw 0 -bc "$dark-overlay" -bg "$dark" -fg "$light" -hlfg "$light" -hlbg "$dark-overlay" -font "Roboto Regular $font-size" -sidebar-mode -fullscreen -padding 400 -opacity "55"

# Rofi search .desktop files
bindsym $mod+d exec --no-startup-id i3-dmenu-desktop --dmenu='rofi -dmenu -show run -eh 1 -bw 0 -bc "$dark-overlay" -bg "$dark" -fg "$light" -hlfg "$light" -hlbg "$dark-overlay" -font "Roboto Regular $font-size" -sidebar-mode -fullscreen -padding 400 -opacity "55"'

# Go to open window
bindsym $mod+Shift+d exec rofi -show window -eh 1 -bw 0 -bc "$dark-overlay" -bg "$dark" -fg "$light" -hlfg "$light" -hlbg "$dark-overlay" -font "Roboto Regular $font-size" -sidebar-mode -fullscreen -padding 400 -opacity "55"

bindsym $mod+p exec rofi_keepass Documents/Passwords/daraul.kdbx

# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# screenshots shortcuts
bindsym --release Print exec scrot -e 'xclip -selection clipboard -t image/png -i $f && mv $f ~/Pictures/'
bindsym --release Shift+Print exec scrot -s -e 'xclip -selection clipboard -t image/png -i $f && mv $f ~/Pictures/'

# set i3lock
bindsym $mod+shift+x exec i3lock --color "$dark"

# setup monitors
set $left-screen HDMI-0
set $right-screen VGA-0

# setup workspaces
set $workspace1 "1"
set $workspace2 "2"
set $workspace3 "3"
set $workspace4 "4"
set $workspace5 "5"
set $workspace6 "6"
set $workspace7 "7"
set $workspace8 "8"
set $workspace9 "9"
set $workspace10 "10"

workspace $workspace1 output $left-screen
workspace $workspace2 output $right-screen
workspace $workspace3 output $left-screen
workspace $workspace4 output $right-screen
workspace $workspace5 output $left-screen
workspace $workspace6 output $right-screen
workspace $workspace7 output $left-screen
workspace $workspace8 output $right-screen
workspace $workspace9 output $left-screen
workspace $workspace10 output $right-screen

# switch to workspace
bindsym $mod+1 workspace $workspace1
bindsym $mod+2 workspace $workspace2
bindsym $mod+3 workspace $workspace3
bindsym $mod+4 workspace $workspace4
bindsym $mod+5 workspace $workspace5
bindsym $mod+6 workspace $workspace6
bindsym $mod+7 workspace $workspace7
bindsym $mod+8 workspace $workspace8
bindsym $mod+9 workspace $workspace9
bindsym $mod+0 workspace $workspace10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $workspace1
bindsym $mod+Shift+2 move container to workspace $workspace2
bindsym $mod+Shift+3 move container to workspace $workspace3
bindsym $mod+Shift+4 move container to workspace $workspace4
bindsym $mod+Shift+5 move container to workspace $workspace5
bindsym $mod+Shift+6 move container to workspace $workspace6
bindsym $mod+Shift+7 move container to workspace $workspace7
bindsym $mod+Shift+8 move container to workspace $workspace8
bindsym $mod+Shift+9 move container to workspace $workspace9
bindsym $mod+Shift+0 move container to workspace $workspace10

#move window to scratchpad
bindsym $mod+Shift+Tab move scratchpad
bindsym $mod+Tab scratchpad show

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"
bindsym $mod+Shift+s exec "i3-nagbar -t warning -m 'Shutdown or reboot?' -b 'Shutdown' 'systemctl poweroff' -b 'Reboot' 'systemctl reboot'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Global Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume $(pacmd list-sinks | grep "index:\|name:\|volume: front\|muted:" | grep '*' | grep -oG '[0-9]*$') +5% && pkill -RTMIN+1 i3blocks #increase sound volume
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume $(pacmd list-sinks | grep "index:\|name:\|volume: front\|muted:" | grep '*' | grep -oG '[0-9]*$') -5% && pkill -RTMIN+1 i3blocks #decrease sound volume
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle && pkill -RTMIN+1 i3blocks # mute sound

# Local audio controls
bindsym Shift+XF86AudioRaiseVolume exec playerctl volume 0.2+ && pkill -RTMIN+1 i3blocks #increase player sound volume
bindsym Shift+XF86AudioLowerVolume exec playerctl volume 0.2- && pkill -RTMIN+1 i3blocks #decrease player sound volume
bindsym Shift+XF86AudioMute exec playerctl volume 0 && pkill -RTMIN+1 # mute player sound

bindsym XF86AudioPlay exec playerctl play-pause && pkill -RTMIN+10 i3blocks
bindsym XF86AudioStop exec playerctl stop && pkill -RTMIN+10 i3blocks
bindsym XF86AudioNext exec playerctl next && pkill -RTMIN+10 i3blocks
bindsym XF86AudioPrev exec playerctl previous && pkill -RTMIN+10 i3blocks

# bindsym $mod+x exec ~/.i3/i3-hud-menu.py
# bindsym $mod+x exec gnome-calculator
# bindsym $mod+x exec dbus-send --system --print-reply --dest="org.freedesktop.ConsoleKit" /org/freedesktop/ConsoleKit/Manager org.freedesktop.ConsoleKit.Manager.Stop

# Miscellaneous Bindings
bindsym XF86Calculator exec gnome-calculator

# Show caps and num lock keys
bindsym --release Caps_Lock exec pkill -SIGRTMIN+11 i3blocks
bindsym --release Num_Lock  exec pkill -SIGRTMIN+11 i3blocks

# window colors
# client                border          background      text            indicator
client.focused          $dark           $dark           $light          $highlight
client.unfocused        $dark           $dark           $light-overlay  $highlight
client.focused_inactive $dark           $dark           $dark-overlay   $highlight
client.urgent           $highlight      $highlight      $light          $highlight

# Start i3bar to display a workspace bar (plus the system information i3status finds out, if available)
# horizontal monitor bar
bar {
	position top
	output $left-screen

        status_command i3blocks -c ~/.config/i3/i3blocks.conf
        tray_output primary

        colors {
                background $dark
                separator  $dark-overlay
                #                   border          background        text
                focused_workspace   $light-overlay  $light            $dark
                inactive_workspace  $dark           $dark-overlay     $dark
                urgent_workspace    $highlight      $highlight        $light
        }
}

# vertical monitor bar
bar {
	position top
	output $right-screen

        status_command i3blocks -c ~/.config/i3/i3blocks-small.conf
        tray_output primary

        colors {
                background $dark
                separator  $dark-overlay
                #                   border          background        text
                focused_workspace   $light-overlay  $light            $dark
                inactive_workspace  $dark           $dark-overlay     $dark
                urgent_workspace    $highlight      $highlight        $light
        }
}

exec_always xrandr --output VGA-0 --mode 1920x1080 --pos 1920x0 --rotate left --output LVDS --off --output DIN --off --output HDMI-0 --primary --mode 1920x1080 --pos 0x544 --rotate normal
exec_always feh --bg-fill --no-xinerama /home/daraul/Pictures/Wallpapers/DN8FfEb.png
exec syncthing
exec ~/.i3/i3-appmenu-service.py
# exec_always compton -f

# steam specific, https://github.com/ValveSoftware/steam-for-linux/issues/1040
# https://github.com/ValveSoftware/steam-for-linux/issues/1040
for_window [class="^Steam$" title="^Friends$"] floating enable
for_window [class="^Steam$" title="Steam - News"] floating enable
for_window [class="^Steam$" title=".* - Chat"] floating enable
for_window [class="^Steam$" title="^Settings$"] floating enable
for_window [class="^Steam$" title=".* - event started"] floating enable
for_window [class="^Steam$" title=".* CD key"] floating enable
for_window [class="^Steam$" title="^Steam - Self Updater$"] floating enable
for_window [class="^Steam$" title="^Screenshot Uploader$"] floating enable
for_window [class="^Steam$" title="^Steam Guard - Computer Authorization Required$"] floating enable
for_window [title="^Steam Keyboard$"] floating enable
